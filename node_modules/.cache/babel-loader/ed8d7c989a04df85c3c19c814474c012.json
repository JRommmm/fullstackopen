{"ast":null,"code":"var _jsxFileName = \"/Users/juanromanutti/Desktop/Dev2020/part 2/asection2a1/src/App.js\";\nimport React, { useState } from 'react';\nimport Person from './components/Person';\n\nconst App = () => {\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas',\n    number: 911\n  }]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n\n  const addName = event => {\n    var nameE = false;\n    event.preventDefault();\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    };\n    const sameName = persons.map(person => {\n      if (person.name === newName) {\n        //console.log(\"ALERT: Name already exists\")\n        nameE = true;\n      }\n    }); //console.log(nameE)\n\n    if (!nameE) {\n      setPersons(persons.concat(nameObject));\n      setNewName(''); //console.log(\"Concatenaded\")\n    }\n  };\n\n  const handleNameChange = event => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    console.log(event.target.value);\n    setNewNumber(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: addName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"name: \", /*#__PURE__*/React.createElement(\"input\", {\n    value: newName,\n    onChange: handleNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"phone number: \", /*#__PURE__*/React.createElement(\"input\", {\n    value: newNumber,\n    onChange: handleNumberChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"add\"))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Numbers\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, persons.map((person, i) => /*#__PURE__*/React.createElement(Person, {\n    key: i,\n    person: person,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/juanromanutti/Desktop/Dev2020/part 2/asection2a1/src/App.js"],"names":["React","useState","Person","App","persons","setPersons","name","number","newName","setNewName","newNumber","setNewNumber","addName","event","nameE","preventDefault","nameObject","sameName","map","person","concat","handleNameChange","console","log","target","value","handleNumberChange","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Person from './components/Person'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([\n    { name: 'Arto Hellas', number: 911 }\n  ]) \n  const [ newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] = useState('')  \n\n\n\nconst addName = (event) => {\n\n  var nameE = false\n  \n  event.preventDefault()\n  const nameObject = {\n    name: newName,\n    number: newNumber\n  }\n\n  const sameName = persons.map((person) => {\n  \tif (person.name === newName){\n  \t\t//console.log(\"ALERT: Name already exists\")\n  \t\tnameE = true\n  \t}\n  })\n  //console.log(nameE)\n  if (!nameE){\n  \tsetPersons(persons.concat(nameObject))\n  \tsetNewName('')\n  \t//console.log(\"Concatenaded\")\n\n  } \n  \n}\n\nconst handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\nconst handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <form onSubmit={addName}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange}/>\n        </div>\n          <div>\n          phone number: <input value={newNumber} onChange={handleNumberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <ul>\n        {persons.map((person, i) => \n          <Person key={i} person={person} />\n        )}\n      </ul>\n    </div>\n  )\n\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}