{"ast":null,"code":"var _jsxFileName = \"/Users/juanromanutti/Desktop/Dev2020/part 2/src/components/Course.js\";\nimport React from 'react';\nimport Info from './Info';\n\nconst Course = ({\n  course\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 8\n    }\n  }, \" \", course.name, \" \"), \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 33\n    }\n  }), course.parts.map(x => /*#__PURE__*/React.createElement(Info, {\n    key: x.id,\n    x: x,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 10\n    }\n  })), \"Total \", course.parts.reduce(function (sum, part) {\n    return sum + part.exercises;\n  }, 0));\n};\n\nexport default Course;\n/*\n<li>\n  {course.map((note, i) => \n    <Note key={note.id} note={note} />\n  )}\n</li>\n*/","map":{"version":3,"sources":["/Users/juanromanutti/Desktop/Dev2020/part 2/src/components/Course.js"],"names":["React","Info","Course","course","name","parts","map","x","id","reduce","sum","part","exercises"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAgB,QAAhB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC7B,sBACE,uDACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMA,MAAM,CAACC,IAAb,MADH,oBAC4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD5B,EAKKD,MAAM,CAACE,KAAP,CAAaC,GAAb,CAAkBC,CAAD,iBACjB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,CAAC,CAACC,EAAb;AAAiB,IAAA,CAAC,EAAED,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CALL,YAUWJ,MAAM,CAACE,KAAP,CAAaI,MAAb,CAAoB,UAASC,GAAT,EAAcC,IAAd,EAAmB;AAC7C,WAAOD,GAAG,GAAGC,IAAI,CAACC,SAAlB;AACA,GAFM,EAEJ,CAFI,CAVX,CADF;AAkBD,CAnBD;;AAqBA,eAAeV,MAAf;AAGM","sourcesContent":["import React from 'react'\nimport Info from'./Info'\n\nconst Course = ({ course }) => {\n  return (\n  \t\t<>\n       <h1> {course.name} </h1> <p></p>\n\n\n\n        {course.parts.map((x) =>\n        \t<Info key={x.id} x={x} />\n        \n        )}\n\n        Total {course.parts.reduce(function(sum, part){\n        \treturn sum + part.exercises\n        }, 0)}\t\n\n      </>\n  )\n\n}\n\nexport default Course\n\n\n      /*\n      <li>\n        {course.map((note, i) => \n          <Note key={note.id} note={note} />\n        )}\n      </li>\n      */"]},"metadata":{},"sourceType":"module"}