{"ast":null,"code":"var _jsxFileName = \"/Users/juanromanutti/Desktop/Dev2020/part1/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  const updateGood = () => {\n    setGood(good + 1);\n    setTotal(total + 1);\n  };\n\n  const updateNeutral = () => {\n    setNeutral(neutral + 1);\n    setTotal(total + 1);\n  };\n\n  const updateBad = () => {\n    setBad(neutral + 1);\n    setTotal(total + 1);\n  };\n\n  const average = () => (good - bad) / total;\n\n  const positive = () => good / total;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \" Give Feedback \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => updateGood(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Good\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => updateNeutral(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => updateBad(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Bad\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \" Statistics \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), \"Good \", good, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }), \"Neutral \", neutral, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }), \"Bad \", bad, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), \"All \", total, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }), \"Average \", average, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }), \"Positive \", positive, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 27\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/juanromanutti/Desktop/Dev2020/part1/src/index.js"],"names":["React","useState","ReactDOM","App","good","setGood","neutral","setNeutral","bad","setBad","total","setTotal","updateGood","updateNeutral","updateBad","average","positive","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMW,UAAU,GAAG,MAAM;AACzBP,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACAO,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACA,GAHA;;AAKA,QAAMG,aAAa,GAAG,MAAM;AAC5BN,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACAK,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACA,GAHA;;AAKA,QAAMI,SAAS,GAAG,MAAM;AACxBL,IAAAA,MAAM,CAACH,OAAO,GAAG,CAAX,CAAN;AACAK,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACA,GAHA;;AAKA,QAAMK,OAAO,GAAG,MAAM,CAACX,IAAI,GAAGI,GAAR,IAAeE,KAArC;;AAEA,QAAMM,QAAQ,GAAG,MAAMZ,IAAI,GAAGM,KAA9B;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAQ,IAAA,OAAO,EAAE,MAAME,UAAU,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAME;AAAQ,IAAA,OAAO,EAAE,MAAMC,aAAa,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,eASE;AAAQ,IAAA,OAAO,EAAE,MAAMC,SAAS,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,WAeQV,IAfR,oBAec;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfd,cAgBWE,OAhBX,oBAgBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBpB,UAiBOE,GAjBP,oBAiBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBZ,UAkBOE,KAlBP,oBAkBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBd,cAmBWK,OAnBX,oBAmBoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBpB,eAoBYC,QApBZ,oBAoBsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBtB,CADF;AAwBD,CAlDD;;AAoDAd,QAAQ,CAACe,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\n\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [total, setTotal] = useState(0)\n \n  const updateGood = () => {\n\t\tsetGood(good + 1);\n\t\tsetTotal(total + 1);\n\t}\n\n  const updateNeutral = () => {\n\t\tsetNeutral(neutral + 1);\n\t\tsetTotal(total + 1);\n\t}\t\n\n  const updateBad = () => {\n\t\tsetBad(neutral + 1);\n\t\tsetTotal(total + 1);\n\t}\n\n  const average = () => (good - bad) / total;\n\n  const positive = () => good / total;\n\n  return (\n    <div>\n      <h1> Give Feedback </h1>\n      <p></p>\n      <button onClick={() => updateGood()}>\n      Good\n      </button>\n      <button onClick={() => updateNeutral()}>\n      Neutral\n      </button> \n      <button onClick={() => updateBad()}>\n      Bad\n      </button>\n      <p></p>\n      <h2> Statistics </h2>\n      <p></p>\n      Good {good} <p></p>\n      Neutral {neutral} <p></p>\n      Bad {bad} <p></p>\n      All {total} <p></p>\n      Average {average} <p></p>\n      Positive {positive} <p></p>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}