{"ast":null,"code":"var _jsxFileName = \"/Users/juanromanutti/Desktop/Dev2020/part1/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Statistics = ({\n  good,\n  bad,\n  neutral,\n  total\n}) => {\n  const average = ({\n    good\n  } - {\n    bad\n  }) / {\n    total\n  };\n  const positive = {\n    good\n  } / {\n    total\n  };\n\n  /*#__PURE__*/\n  React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }\n  }, \" Statistics \"), \"Good \", good, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 19\n    }\n  }), \"Neutral \", neutral, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 25\n    }\n  }), \"Bad \", bad, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }), \"All \", total, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 19\n    }\n  }), \"Average \", average, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }\n  }), \"Positive \", positive, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 27\n    }\n  }));\n};\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  const updateGood = () => {\n    setGood(good + 1);\n    setTotal(total + 1);\n  };\n\n  const updateNeutral = () => {\n    setNeutral(neutral + 1);\n    setTotal(total + 1);\n  };\n\n  const updateBad = () => {\n    setBad(bad + 1);\n    setTotal(total + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \" Give Feedback \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => updateGood(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Good\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => updateNeutral(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => updateBad(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Bad\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Statistics, {\n    good: good,\n    bad: bad,\n    neutral: neutral,\n    total: total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/juanromanutti/Desktop/Dev2020/part1/src/index.js"],"names":["React","useState","ReactDOM","Statistics","good","bad","neutral","total","average","positive","App","setGood","setNeutral","setBad","setTotal","updateGood","updateNeutral","updateBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Statistics = ({good, bad, neutral, total}) => {\n\t  const average = ({good} - {bad}) / {total};\n  \t  const positive = {good} / {total};\t  \n\t  <>\n\n\n\t  <h2> Statistics </h2>\n      \n      Good {good} <p></p>\n      Neutral {neutral} <p></p>\n      Bad {bad} <p></p>\n      All {total} <p></p>\n      Average {average} <p></p>\n      Positive {positive} <p></p>\n      </>\n}\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [total, setTotal] = useState(0)\n \n  const updateGood = () => {\n\t\tsetGood(good + 1);\n\t\tsetTotal(total + 1);\n\t}\n\n  const updateNeutral = () => {\n\t\tsetNeutral(neutral + 1);\n\t\tsetTotal(total + 1);\n\t}\t\n\n  const updateBad = () => {\n\t\tsetBad(bad + 1);\n\t\tsetTotal(total + 1);\n\t}\n\n\n  return (\n    <div>\n      <h1> Give Feedback </h1>\n      <p></p>\n      <button onClick={() => updateGood()}>\n      Good\n      </button>\n      <button onClick={() => updateNeutral()}>\n      Neutral\n      </button> \n      <button onClick={() => updateBad()}>\n      Bad\n      </button>\n      <p></p>\n      <Statistics good={good} bad={bad} neutral={neutral} total={total} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}